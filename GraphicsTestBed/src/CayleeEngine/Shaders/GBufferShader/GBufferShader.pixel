#include "../InputLayouts/default.hlsl"

struct GBufferOut
{
  float4 world_pos  : SV_TARGET0;  // World position
  float4 normal     : SV_TARGET1;  // World normal
  float4 diffuse    : SV_TARGET2;  // Diffuse color
  float4 specular   : SV_TARGET3;  // Specular
};

Texture2D<float4> gDiffuseTexture : register(t0);
Texture2D<float4> gGBuffer[4] : register(t1);

SamplerState gSampler : register(s0);

GBufferOut main(VertexOut vin) : SV_TARGET
{
  GBufferOut output;

  output.world_pos = float4(vin.world_pos, 1.0f);
  output.normal = float4(vin.normal, 1.0f);
  output.diffuse = gDiffuseTexture.Sample(gSampler, vin.uv);
  output.specular = float4(0.5f, 0.5f, 0.5f, 1.0f);

  return output;
}
